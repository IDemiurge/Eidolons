package eidolons.content;

import main.content.VALUE;
import main.content.values.parameters.PARAMETER;
import main.content.values.properties.G_PROPS;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.apache.commons.lang3.tuple.Pair;

import java.util.HashMap;
import java.util.Map;

public interface UNIT_INFO_PARAMS {
    PARAMETER[] RESOURCE_COSTS = {
     PARAMS.AP_COST, PARAMS.STA_COST, PARAMS.ESS_COST,
     PARAMS.FOC_COST, PARAMS.ENDURANCE_COST, PARAMS.CP_COST,
    };

    Pair<PARAMETER, PARAMETER> MIN_REQ_RES_FOR_USE = new ImmutablePair<>(PARAMS.FOC_REQ, PARAMS.FOCUS);

    PARAMETER[] COSTS_ICON_PARAMS = {
     PARAMS.N_OF_ACTIONS, PARAMS.STAMINA,
     PARAMS.ESSENCE, PARAMS.FOCUS,
     PARAMS.ENDURANCE, PARAMS.N_OF_COUNTERS,
    };

    PARAMS[] ARMOR_TOOLTIP = {
     PARAMS.ARMOR, PARAMS.C_DURABILITY,
     PARAMS.COVER_PERCENTAGE, PARAMS.HARDNESS,
     PARAMS.ARMOR_LAYERS, PARAMS.WEIGHT,
     PARAMS.AP_PENALTY, PARAMS.STAMINA_PENALTY,
     PARAMS.ESSENCE_PENALTY, PARAMS.FOCUS_PENALTY,
     PARAMS.ATTACK_MOD, PARAMS.DEFENSE_MOD,
//     SPELL_ARMOR,
    };

    PARAMS[] WEAPON_DC_INFO_PARAMS = {
     PARAMS.DAMAGE_BONUS, PARAMS.DAMAGE_MOD,
     PARAMS.DICE, PARAMS.DIE_SIZE,
     PARAMS.ATTACK_BONUS, PARAMS.ATTACK_MOD,
     PARAMS.DEFENSE_BONUS, PARAMS.DEFENSE_MOD,
     PARAMS.C_DURABILITY, PARAMS.HARDNESS,
     PARAMS.STR_DMG_MODIFIER, PARAMS.AGI_DMG_MODIFIER,
     PARAMS.SP_DMG_MODIFIER, PARAMS.INT_DMG_MODIFIER,
     PARAMS.IMPACT_AREA, PARAMS.WEIGHT,
     PARAMS.ARMOR_MOD, PARAMS.ARMOR_PENETRATION,
     PARAMS.DURABILITY_DAMAGE_MOD, PARAMS.DURABILITY_SELF_DAMAGE_MOD,
     PARAMS.ATTACK_AP_PENALTY, PARAMS.ATTACK_STA_PENALTY,
    };

    //                                   <><><><><>

    PARAMS[][] UNIT_INFO_PARAMS_GENERAL = {
     {
      PARAMS.INITIATIVE_MODIFIER, PARAMS.INITIATIVE,
      PARAMS.STARTING_FOCUS,
//      BASE_MORALE,
      PARAMS.ENDURANCE_REGEN, PARAMS.STAMINA_REGEN,
      PARAMS.TOUGHNESS_RECOVERY,
//      UNCONSCIOUS_THRESHOLD
     },
     {
      PARAMS.SIGHT_RANGE, PARAMS.SIDE_SIGHT_PENALTY,
      PARAMS.HEIGHT, PARAMS.GIRTH,
      PARAMS.WEIGHT, PARAMS.CARRYING_CAPACITY,
      PARAMS.ILLUMINATION, PARAMS.CONCEALMENT
     },
     {
      PARAMS.FOCUS_RETAINMENT, PARAMS.FOCUS_RESTORATION,
      PARAMS.MORALE_RETAINMENT, PARAMS.MORALE_RESTORATION,
      PARAMS.INTERRUPT_DAMAGE, PARAMS.FORCE_PROTECTION

//     FATIGUE, CONFUSION,
//      FEAR_RESISTANCE, WOUNDS_RESISTANCE,
//      BASH_RESISTANCE,
     },

    };
    PARAMS[][] UNIT_INFO_PARAMS_COMBAT = {
     {
      PARAMS.ATTACK_AP_PENALTY, PARAMS.ATTACK_STA_PENALTY,
      PARAMS.MOVE_AP_PENALTY, PARAMS.MOVE_STA_PENALTY,

      PARAMS.DIAGONAL_ATTACK_MOD, PARAMS.DIAGONAL_DAMAGE_MOD,
      PARAMS.SIDE_ATTACK_MOD, PARAMS.SIDE_DAMAGE_MOD,
     },
     {
      PARAMS.CRITICAL_MOD, PARAMS.AUTO_CRIT_CHANCE,
      PARAMS.CLOSE_QUARTERS_ATTACK_MOD, PARAMS.CLOSE_QUARTERS_DAMAGE_MOD,
      PARAMS.LONG_REACH_ATTACK_MOD, PARAMS.LONG_REACH_DAMAGE_MOD,
      PARAMS.COUNTER_MOD, PARAMS.LONG_REACH_DAMAGE_MOD,
     },
     {
      PARAMS.ARMOR_PENETRATION, PARAMS.BLOCK_PENETRATION,
      PARAMS.DEFENSE_PENETRATION, PARAMS.PARRY_PENETRATION,
      PARAMS.ACCURACY, PARAMS.EVASION,
      PARAMS.BLOCK_CHANCE, PARAMS.PARRY_CHANCE,


     },
    };
    PARAMS[][] UNIT_INFO_PARAMS_MISC = {
     {
      PARAMS.QUICK_SLOTS, PARAMS.ITEM_COST_MOD,
      PARAMS.DETECTION, PARAMS.STEALTH,
      PARAMS.SNEAK_DEFENSE_PENETRATION, PARAMS.SNEAK_ARMOR_PENETRATION,
      PARAMS.SNEAK_ATTACK_MOD, PARAMS.SNEAK_DAMAGE_MOD,
     },
     {
      PARAMS.CADENCE_AP_MOD, PARAMS.CADENCE_ATTACK_MOD,
      PARAMS.CADENCE_BONUS, PARAMS.CADENCE_DAMAGE_MOD,
      PARAMS.CADENCE_DEFENSE_MOD, PARAMS.CADENCE_FOCUS_BOOST,
      PARAMS.CADENCE_STA_MOD, PARAMS.CADENCE_RETAINMENT_CHANCE,
     },
     {
      PARAMS.WATCH_DEFENSE_MOD, PARAMS.WATCH_ATTACK_MOD,
      PARAMS.WATCH_AP_PENALTY_MOD, PARAMS.WATCH_DETECTION_MOD,
      PARAMS.WATCH_ATTACK_OTHERS_MOD, PARAMS.WATCH_DEFENSE_OTHERS_MOD,
      PARAMS.WATCHED_ATTACK_MOD,
     },

    };

    PARAMS[][] UNIT_INFO_PARAMS_MAGIC = {
     {
      PARAMS.SPELL_ESS_PENALTY,
      PARAMS.SPELL_STA_PENALTY,
      PARAMS.SPELL_AP_PENALTY,
      PARAMS.SPELL_FOC_PENALTY,

      PARAMS.RESISTANCE_PENETRATION,
      PARAMS.ESSENCE_REGEN,
      PARAMS.MEMORIZATION_CAP,
      PARAMS.MEMORY_REMAINING,
     },
     {
      PARAMS.DIVINATION_CAP,
      PARAMS.INTERRUPT_DAMAGE,
      PARAMS.REST_BONUS,
      PARAMS.MEDITATION_BONUS,
      PARAMS.CONCENTRATION_BONUS,
      PARAMS.REST_MOD,
      PARAMS.MEDITATION_MOD,
      PARAMS.CONCENTRATION_MOD,
     },
    };

    String[] INFO_TABLE_NAMES = {
     "Physical", "Combat", "Magic", "Misc", "Rolls", "Mods"
    };

    VALUE[][] UNIT_INFO_PARAMS_MODS = {
     {
      PARAMS.COUNTER_MOD,
      PARAMS.THROW_ATTACK_MOD,
      PARAMS.THROW_DAMAGE_MOD,
      PARAMS.COOLDOWN_MOD,
      PARAMS.BLEEDING_MOD,
     },
     {
      PARAMS.INSTANT_DAMAGE_MOD,
      PARAMS.INSTANT_ATTACK_MOD,
      PARAMS.INSTANT_DEFENSE_MOD,
      PARAMS.AOO_DAMAGE_MOD,
      PARAMS.AOO_ATTACK_MOD,
      PARAMS.AOO_DEFENSE_MOD,
      PARAMS.COUNTER_ATTACK_MOD,
      PARAMS.COUNTER_DEFENSE_MOD,
     },
     {
      PARAMS.FORCE_MOD,
      PARAMS.FORCE_KNOCK_MOD, PARAMS.FORCE_PUSH_MOD
      , PARAMS.FORCE_PROTECTION, PARAMS.FORCE_DAMAGE_MOD
      , PARAMS.FORCE_SPELL_DAMAGE_MOD, PARAMS.FORCE_MOD_SOURCE_WEIGHT
      , PARAMS.FORCE_SPELLPOWER_MOD
     },
     {
      PARAMS.PASSAGE_ATTACK_MOD,
      PARAMS.ENGAGEMENT_ATTACK_MOD,
      PARAMS.FLIGHT_ATTACK_MOD,
      PARAMS.STUMBLE_ATTACK_MOD,
      PARAMS.PASSAGE_DEFENSE_MOD,
      PARAMS.ENGAGEMENT_DEFENSE_MOD,
      PARAMS.FLIGHT_DEFENSE_MOD,
      PARAMS.STUMBLE_DEFENSE_MOD,

      PARAMS.DISENGAGEMENT_ATTACK_MOD
      ,
      PARAMS.DISENGAGEMENT_DEFENSE_MOD,
     },
     {
      PARAMS.STOP_DISENGAGEMENT_CHANCE_MOD,
      PARAMS.PASS_DISENGAGEMENT_CHANCE_MOD,
      PARAMS.STOP_ENGAGEMENT_CHANCE_MOD,
      PARAMS.PASS_ENGAGEMENT_CHANCE_MOD,
      PARAMS.STOP_FLIGHT_CHANCE_MOD,
      PARAMS.PASS_FLIGHT_CHANCE_MOD,
      PARAMS.STOP_PASSAGE_CHANCE_MOD,
      PARAMS.PASS_PASSAGE_CHANCE_MOD,
     },
    };

    VALUE[][] UNIT_INFO_PARAMS_ROLLS = {
     {
      PARAMS.REACTION_ROLL_SAVE_BONUS, PARAMS.REACTION_ROLL_BEAT_BONUS,
      PARAMS.REFLEX_ROLL_SAVE_BONUS, PARAMS.REFLEX_ROLL_BEAT_BONUS,
      PARAMS.DEFENSE_ROLL_SAVE_BONUS, PARAMS.DEFENSE_ROLL_BEAT_BONUS,
      PARAMS.DISARM_ROLL_SAVE_BONUS, PARAMS.DISARM_ROLL_BEAT_BONUS,
     },
     {
      PARAMS.FORTITUDE_ROLL_SAVE_BONUS, PARAMS.FORTITUDE_ROLL_BEAT_BONUS,
      PARAMS.BODY_STRENGTH_ROLL_SAVE_BONUS, PARAMS.BODY_STRENGTH_ROLL_BEAT_BONUS,
      PARAMS.MASS_ROLL_SAVE_BONUS, PARAMS.MASS_ROLL_BEAT_BONUS,
      PARAMS.FORCE_ROLL_SAVE_BONUS, PARAMS.FORCE_ROLL_BEAT_BONUS,
     },
     {
      PARAMS.MIND_AFFECTING_ROLL_SAVE_BONUS, PARAMS.MIND_AFFECTING_ROLL_BEAT_BONUS,
      PARAMS.QUICK_WIT_ROLL_SAVE_BONUS, PARAMS.QUICK_WIT_ROLL_BEAT_BONUS,
      PARAMS.FAITH_ROLL_SAVE_BONUS, PARAMS.FAITH_ROLL_BEAT_BONUS,
      PARAMS.DETECTION_ROLL_SAVE_BONUS, PARAMS.DETECTION_ROLL_BEAT_BONUS,
     },
    };
    VALUE[][][] UNIT_INFO_PARAMS = {
     UNIT_INFO_PARAMS_GENERAL,
     UNIT_INFO_PARAMS_COMBAT,
     UNIT_INFO_PARAMS_MAGIC,
     UNIT_INFO_PARAMS_MISC,
     UNIT_INFO_PARAMS_ROLLS,
     UNIT_INFO_PARAMS_MODS,
    };

    //                                   <><><><><>


    VALUE ACTION_TOOLTIP_HEADER_KEY = G_PROPS.NAME;
    VALUE[] ACTION_TOOLTIP_BASE_KEYS = {
     PARAMS.BASE_DAMAGE,
     PARAMS.COUNTER_MOD,
     PARAMS.INSTANT_DAMAGE_MOD,
     PARAMS.AOO_DAMAGE_MOD,
     PARAMS.SIDE_DAMAGE_MOD,
     PARAMS.DIAGONAL_DAMAGE_MOD
    };

    VALUE[] ACTION_TOOLTIP_RANGE_KEYS = {
     PARAMS.CLOSE_QUARTERS_DAMAGE_MOD,
     PARAMS.DAMAGE_MOD,
     PARAMS.LONG_REACH_DAMAGE_MOD,
    };

    PARAMS[][] ACTION_TOOLTIP_PARAMS_TEXT = {
     {
      PARAMS.CRITICAL_MOD,
      PARAMS.ACCURACY,
      PARAMS.ARMOR_MOD,
      PARAMS.IMPACT_AREA
     },

     {
      PARAMS.SNEAK_DEFENSE_MOD,
      PARAMS.BLEEDING_MOD,
      PARAMS.DURABILITY_DAMAGE_MOD
     },

     {
      PARAMS.FORCE,
      PARAMS.FORCE_KNOCK_MOD,
      PARAMS.FORCE_PUSH_MOD,
      PARAMS.FORCE_DAMAGE_MOD
     },

    };

    Map<VALUE, Pair<PARAMS, PARAMS>> ACTION_TOOLTIPS_PARAMS_MAP = _buildMap();

    static Map<VALUE, Pair<PARAMS, PARAMS>> _buildMap() {
        Map<VALUE, Pair<PARAMS, PARAMS>> map = new HashMap<>();

        map.put(G_PROPS.NAME, new ImmutablePair<>(PARAMS.DAMAGE_BONUS, PARAMS.ATTACK));
        map.put(PARAMS.BASE_DAMAGE, new ImmutablePair<>(PARAMS.DAMAGE, PARAMS.ATTACK));
        map.put(PARAMS.COUNTER_MOD, new ImmutablePair<>(PARAMS.COUNTER_MOD, PARAMS.COUNTER_ATTACK_MOD));
        map.put(PARAMS.INSTANT_DAMAGE_MOD, new ImmutablePair<>(PARAMS.INSTANT_DAMAGE_MOD, PARAMS.INSTANT_ATTACK_MOD));
        map.put(PARAMS.AOO_DAMAGE_MOD, new ImmutablePair<>(PARAMS.AOO_DAMAGE_MOD, PARAMS.AOO_ATTACK_MOD));
        map.put(PARAMS.SIDE_DAMAGE_MOD, new ImmutablePair<>(PARAMS.SIDE_DAMAGE_MOD, PARAMS.SIDE_ATTACK_MOD));
        map.put(PARAMS.DIAGONAL_DAMAGE_MOD, new ImmutablePair<>(PARAMS.DIAGONAL_DAMAGE_MOD, PARAMS.DIAGONAL_ATTACK_MOD));


        map.put(PARAMS.CLOSE_QUARTERS_DAMAGE_MOD, new ImmutablePair<>(PARAMS.CLOSE_QUARTERS_DAMAGE_MOD, PARAMS.CLOSE_QUARTERS_ATTACK_MOD));
        map.put(PARAMS.DAMAGE_MOD, new ImmutablePair<>(PARAMS.DAMAGE_MOD, PARAMS.ATTACK_MOD));
        map.put(PARAMS.LONG_REACH_DAMAGE_MOD, new ImmutablePair<>(PARAMS.LONG_REACH_DAMAGE_MOD, PARAMS.LONG_REACH_ATTACK_MOD));

        return map;
    }
}
