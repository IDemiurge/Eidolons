package main.content.enums.entity;

import main.system.auxiliary.StringMaster;

import static main.content.enums.entity.PerkEnums.PERK_PARAM.*;

/**
 * Created by Alexander on 2/1/2022
 */
public class ClassEnums {
    public enum CLASS_GROUP {
        SORCERER, WIZARD,
        FIGHTER,
        ROGUE,
        KNIGHT,
        TRICKSTER,
        HERMIT,
        ACOLYTE,
        RANGER,
        MULTICLASS,
        ;

        public String getName() {
            return StringMaster.format(name());
        }
    }

    public enum CLASS_PERK_GROUP {

        FIGHTER(TOUGHNESS, ATTACK, ARMOR, FORTITUDE, ENDURANCE, CARRYING_CAPACITY),
        FIGHTER_SOLDIER(TOUGHNESS, ATTACK, ARMOR, FORTITUDE, ENDURANCE, CARRYING_CAPACITY),
        FIGHTER_WARRIOR(TOUGHNESS, ATTACK, ARMOR, FORTITUDE, ENDURANCE, CARRYING_CAPACITY),

        SQUIRE(LEADERSHIP_MASTERY, RESISTANCE, SPIRIT, CARRYING_CAPACITY, FORTITUDE),
        SQUIRE_KNIGHT(TOUGHNESS, ATTACK, RESISTANCE, SPIRIT, FORTITUDE),
        SQUIRE_OFFICER(LEADERSHIP_MASTERY, SIGHT_RANGE, RESISTANCE, SPIRIT, FORTITUDE),

        ROGUE(STEALTH, ATTACK, TOUGHNESS, INITIATIVE, SNEAK_ATTACK_MOD),
        ROGUE_SWASHBUCKLER(DEFENSE, ATTACK, INITIATIVE, FOCUS_SPEED),
        ROGUE_THUG(STARTING_FOCUS, STEALTH, ATTACK, TOUGHNESS, INITIATIVE, SNEAK_ATTACK_MOD),

        TRICKSTER(DEFENSE, QUICK_SLOTS, STARTING_FOCUS, INITIATIVE, STEALTH, ATTACK, SNEAK_ATTACK_MOD),
        TRICKSTER_ACROBAT(DEFENSE, QUICK_SLOTS, STARTING_FOCUS, INITIATIVE, STEALTH, ATTACK, SNEAK_ATTACK_MOD),
        TRICKSTER_THIEF(DEFENSE, QUICK_SLOTS, STARTING_FOCUS, INITIATIVE, STEALTH, ATTACK, SNEAK_ATTACK_MOD),

        SCOUT(SIGHT_RANGE, STEALTH, DETECTION, ATTACK, INITIATIVE),
        SCOUT_RANGER(SIGHT_RANGE, STEALTH, ATTACK, FOCUS_SPEED, DETECTION, INITIATIVE),

        HERMIT(SPELLPOWER, RESISTANCE, FORTITUDE, SPIRIT, ESSENCE, ESSENCE_ABSORPTION),
        HERMIT_SHAMAN(SPELLPOWER, RESISTANCE_PENETRATION, FORTITUDE, SPIRIT, ESSENCE_ABSORPTION),
        HERMIT_DRUID(KNOWLEDGE_CAP, SPELLPOWER, RESISTANCE, FOCUS_SPEED, SPIRIT, ESSENCE, ESSENCE_ABSORPTION),

        ACOLYTE(DIVINATION_CAP, SPIRIT, ESSENCE, ESSENCE_ABSORPTION, FOCUS_SPEED, RESISTANCE),
        ACOLYTE_CLERIC(DIVINATION_CAP, KNOWLEDGE_CAP, ESSENCE, ESSENCE_ABSORPTION, FOCUS_SPEED, RESISTANCE),
        ACOLYTE_PRIEST(DIVINATION_CAP, SPELLPOWER, ESSENCE, ESSENCE_ABSORPTION, FOCUS_SPEED, RESISTANCE),
        ACOLYTE_MONK(SPIRIT, FOCUS_SPEED, RESISTANCE, DEFENSE, INITIATIVE),

        APOSTATE(RESISTANCE_PENETRATION, SPELLPOWER, ESSENCE_ABSORPTION, STARTING_FOCUS, MEMORIZATION_CAP),
        APOSTATE_DARK(RESISTANCE_PENETRATION, SPELLPOWER, STARTING_FOCUS, MEMORIZATION_CAP),
        APOSTATE_ARCANE(ESSENCE, SPELLPOWER, ESSENCE_ABSORPTION, STARTING_FOCUS, MEMORIZATION_CAP),

        WIZARD_APPRENTICE(KNOWLEDGE_CAP, ESSENCE, FOCUS_SPEED, CARRYING_CAPACITY, MEMORIZATION_CAP),
        WIZARD(KNOWLEDGE_CAP, ESSENCE, ESSENCE_ABSORPTION, FOCUS_SPEED, STARTING_FOCUS, MEMORIZATION_CAP),
        MAGE(SPELLPOWER, ESSENCE, ESSENCE_ABSORPTION, FOCUS_SPEED, STARTING_FOCUS, MEMORIZATION_CAP),

        MULTICLASS,
        ;
        PerkEnums.PERK_PARAM[] paramPerks;

        CLASS_PERK_GROUP(PerkEnums.PERK_PARAM... paramPerks) {
            this.paramPerks = paramPerks;
        }

        public PerkEnums.PERK_PARAM[] getParamPerks() {
            return paramPerks;
        }
    }

    public enum CLASS_TYPE {
        MELEE, SPECIALIST, SPELLCASTER, GODLY
    }
}
